package com.epologee.ui.mouse {	import com.epologee.ui.mouse.IBlockable;		import flash.utils.Dictionary;	import flash.utils.getQualifiedClassName;		/**	 * @author Eric-Paul Lecluse | epologee.com (c) 2008	 */	public class BlockerManager {		private static const INSTANCE:BlockerManager = new BlockerManager();		//		private var _levels:Dictionary;		public static function getInstance():BlockerManager {			return INSTANCE;		}		public static function block(inLevel:String):void {			INSTANCE.blockByLevel(inLevel);		}		public static function unblock():void {			INSTANCE.unblockAll();		}		public function BlockerManager() {			if (INSTANCE) throw new Error("singleton: use BlockerManager.getInstance()");			_levels = new Dictionary();		}		public function registerBlocker(inBlocker:IBlockable, inLevel:String):void {			var levelList:Array = _levels[inLevel] as Array;			if (!levelList) levelList = [];			levelList.push(inBlocker);			_levels[inLevel] = levelList;			//			Logee.debug("registerBlocker: " + inLevel+" -> " + _levels[inLevel], toString());		}		private function blockByLevel(inLevel:String):void {			unblockAll();//			Logee.debug("blockByLevel: " + inLevel, toString());			switch (inLevel) {				case BlockLevels.LEVEL_3:					blockList(_levels[BlockLevels.LEVEL_3]);				case BlockLevels.LEVEL_2:					blockList(_levels[BlockLevels.LEVEL_2]);				case BlockLevels.LEVEL_1:					blockList(_levels[BlockLevels.LEVEL_1]);				case BlockLevels.LEVEL_0:					blockList(_levels[BlockLevels.LEVEL_0]);			}		}		private function blockList(inList:Array):void {			if (!(inList is Array)) return;						var leni:int = inList.length;			for (var i:int = 0;i < leni; i++) {				var blocker:IBlockable = inList[i] as IBlockable;				if (blocker) {//					Logee.debug("--: "+blocker, toString());					blocker.block();				}			}		}		private function unblockAll():void {//			Logee.debug("unblockAll: ", toString());						for each (var list : Array in _levels) {				var leni:int = list.length;				for (var i:int = 0;i < leni; i++) {					var blocker:IBlockable = list[i] as IBlockable;					if (blocker) {//						Logee.debug("--: "+blocker, toString());						blocker.unblock();					}				}			}		}				public function toString():String {			// com.epologee.ui.mouse.BlockerManager			var s:String = "";			// s = "[ " + name + " ]:";			return s+getQualifiedClassName(this);		}	}}